# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.ui import Select
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestUntitled():
  def setup_method(self):
    self.driver = webdriver.Chrome(executable_path='C:/Users/david/Downloads/viktorlabs-dps-translation-fix/tools/chromedriver.exe')
    self.vars = {}
  
  def teardown_method(self):
    self.driver.quit()
  
  def test_sample(self):
    self.driver.get("https://viktorlab.cn/akdata/dps/#")
    self.driver.set_window_size(1542, 1050)
    WebDriverWait(self.driver, 120).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, "div.card.mb-2"))) # wait for first card to load for at least a minute
    WebDriverWait(self.driver, 10).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, "figure > img"))) # character portrait to load
    self.driver.find_element(By.CSS_SELECTOR, "figure > img").click()                                                       # first instance of character portrait
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.ID, "vue-dialog")))          # wait for characters to load
    self.driver.find_element(By.LINK_TEXT, "黑键").click()                                                                  # select character by name on page
    select_object = Select(self.driver.find_element(By.CSS_SELECTOR, "td:nth-child(2) .dps__level"))
    select_object.select_by_index(70-1)                                                                                # select level 70
    self.driver.find_element(By.CSS_SELECTOR, "td:nth-child(2) .dps__equip").text                                           # check if operator has modules
    if (self.driver.find_element(By.CSS_SELECTOR, "td:nth-child(2) .dps__equip").text == ''):
        print("This operator has no module")
    else:
        select_object = Select(self.driver.find_element(By.CSS_SELECTOR, "td:nth-child(2) .dps__equip"))
        select_object.select_by_index(0)                                                                               # select first module
    select_object = Select(self.driver.find_element(By.CSS_SELECTOR, "td:nth-child(2) .dps__skill"))
    select_object.select_by_index(0)                                                                                   # select first skill                        
    self.driver.find_element(By.CSS_SELECTOR, ".dps__enemy-def").clear()
    self.driver.find_element(By.CSS_SELECTOR, ".dps__enemy-def").send_keys("300")
    self.driver.find_element(By.CSS_SELECTOR, ".dps__enemy-mr").clear()
    self.driver.find_element(By.CSS_SELECTOR, ".dps__enemy-mr").send_keys("30")
    self.driver.find_element(By.CSS_SELECTOR, ".l-main").click()                                                             # click outside fields to update all values
    self.vars["s1"] = self.driver.find_element(By.CSS_SELECTOR, "td:nth-child(2) > .dps__period").text                            # grab period
    self.vars["d2"] = self.driver.find_element(By.CSS_SELECTOR, "td:nth-child(2) > .dps__s_dps").text                             # grab skill dps
    self.vars["d3"] = self.driver.find_element(By.CSS_SELECTOR, "td:nth-child(2) > .dps__g_dps").text                             # grab average dps
    print(self.vars)
  
test = TestUntitled()
test.setup_method()
test.test_sample()

import code
code.interact(local=locals())


test.teardown_method()
